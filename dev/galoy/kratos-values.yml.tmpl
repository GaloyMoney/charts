kratos:
  image:
    tag: v0.11.1
  replicaCount: 2
  kratos:
    automigration:
      enabled: true
    config:
      secrets:
        default:
          - PLEASE-CHANGE-ME-I-AM-VERY-INSECURE
      version: v0.11.0
      dsn: postgresql://kratos-pg:kratos-pg@postgresql/kratos-pg
      serve:
        public:
          base_url: http://127.0.0.1:4433/
          cors:
            enabled: true
            allow_credentials: true
            allowed_origins:
              - http://127.0.0.1:4433
              - http://0.0.0.0:4434
              - http://localhost:3000
              - http://127.0.0.1:3000
            allowed_methods:
              - POST
              - GET
              - PUT
              - PATCH
              - DELETE
            allowed_headers:
              - Authorization
              - Cookie
              - Content-Type
              - X-Session-Token
            exposed_headers:
              - Content-Type
              - Set-Cookie
            debug: true
        admin:
          base_url: http://0.0.0.0:4434/
      selfservice:
        default_browser_return_url: http://localhost:3000/
        allowed_return_urls:
          - http://127.0.0.1:4002/
          - http://localhost:3000/
        methods:
          oidc:
            enabled: false
          webauthn:
            enabled: false
          totp:
            enabled: true
          password:
            enabled: true
          code:
            enabled: true
            config:
              # Defines how long the verification or the recovery code is valid for (default 1h)
              lifespan: 15m
        flows:
          error:
            ui_url: http://127.0.0.1:4002/error
          settings:
            ui_url: http://127.0.0.1:4002/settings
            privileged_session_max_age: 15m
            required_aal: aal1
            after:
              profile:
                hooks:
                  - hook: web_hook
                    config:
                      # url: http://e2e-tests:4002/auth/after_settings_hooks
                      url: http://invalid-because-we-dont-want-profile-to-be-updated
                      method: POST
                      body: file:///home/ory/body.jsonnet
                      auth:
                        type: api_key
                        config:
                          name: Authorization
                          value: ${kratos_callback_api_key}
                          in: header
          recovery:
            enabled: true
            ui_url: http://127.0.0.1:4002/recovery
          verification:
            use: code # Defines which method is used, one of 'code' or 'link'.
            enabled: true
          logout:
            after:
              default_browser_return_url: http://127.0.0.1:4002/login
          login:
            ui_url: http://localhost:3000/login
            lifespan: 10m
            # this below make phone authentication fails even if there is no email in the schema
            # after:
            #   password:
            #     hooks:
            #     - hook: require_verified_address
          registration:
            lifespan: 10m
            ui_url: http://localhost:3000/register
            after:
              password:
                hooks:
                  - hook: web_hook
                    config:
                      url: http://e2e-tests:4012/kratos/registration
                      method: POST
                      can_interrupt: true
                      body: file:///home/ory/body.jsonnet # TODO: use a base64 encoding instead
                      auth:
                        type: api_key
                        config:
                          name: Authorization
                          value: ${kratos_callback_api_key}
                          in: header
                  - hook: session
      log:
        level: debug
        format: json
        leak_sensitive_values: true
      secrets:
        cookie:
          - PLEASE-CHANGE-ME-I-AM-VERY-INSECURE
        cipher:
          - 32-LONG-SECRET-NOT-SECURE-AT-ALL
      ciphers:
        algorithm: xchacha20-poly1305
      hashers:
        algorithm: bcrypt
        bcrypt:
          cost: 8
      identity:
        default_schema_id: email
        schemas:
          - id: email
            url: file:///etc/config/identity.schema.json
      courier:
        smtp:
          connection_uri: smtps://test:test@mailslurper:1025/?skip_ssl_verify=true
      session:
        lifespan: "720h" # 1 month
        earliest_possible_extend: "96h" # 4 days
        whoami:
          required_aal: aal1
    identitySchemas:
      "identity.schema.json": |
        {
          "$id": "https://schemas.ory.sh/presets/kratos/quickstart/email-password/identity.schema.json",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Person",
          "type": "object",
          "properties": {
            "traits": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "title": "E-Mail",
                  "minLength": 3,
                  "ory.sh/kratos": {
                    "credentials": {
                      "password": {
                        "identifier": true
                      }
                    },
                    "verification": {
                      "via": "email"
                    },
                    "recovery": {
                      "via": "email"
                    }
                  }
                }
              },
              "required": ["email"],
              "additionalProperties": false
            }
          }
        }

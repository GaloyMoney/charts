galoy:
  network: regtest
  images:
    ## Galoy Application Image details
    ##
    app:
      ## Has api, trigger and exporter
      ##
      repository: ntheile/galoy-test:0.0.11
      ## Digest of the image
      ##
      digest: "sha256:aa2ac0be4888d14d855acba828997131dc51bfd349364e379509bb4d55539694"
      ## Not used by Helm, just used to ref to the source https://github.com/GaloyMoney/galoy.git
      ## Reference for timestamping the corresponding docker image and used by internal CI.
      ##
      git_ref: "e9fd5ff"
  config:
    test_accounts:
      - ref: A
        phone: "+59981730222"
        code: "111111"
        role: "bankowner"
        username: "bankowner"
        ref: "bankowner"
        needUsdWallet: true
    apollo:
      playground: true
    swap:
      loopOutWhenHotWalletLessThan: 500000
      swapOutAmount:  250000
      swapProviders: ["Loop"]
      lnd1loopRestEndpoint: https://lnd1-loop.galoy-dev-bitcoin.svc.cluster.local:8081
      lnd1loopRpcEndpoint: lnd1-loop.galoy-dev-bitcoin.svc.cluster.local:11010
      lnd2loopRestEndpoint: https://lnd1-loop.galoy-dev-bitcoin.svc.cluster.local:8081
      lnd2loopRpcEndpoint: lnd1-loop.galoy-dev-bitcoin.svc.cluster.local:11010
    cronConfig:
      swapEnabled: true
    kratosConfig:
      publicApi: http://galoy-kratos-public.galoy-dev-galoy.svc.cluster.local
      adminApi:  http://galoy-kratos-admin.galoy-dev-galoy.svc.cluster.local
      corsAllowedOrigins:
        - https://localhost:8080

  bitcoind:
    dns: bitcoind.galoy-dev-bitcoin.svc.cluster.local
    port: 18332

  lnd1:
    dns: lnd1.galoy-dev-bitcoin.svc.cluster.local

  lnd2:
    dns: lnd1.galoy-dev-bitcoin.svc.cluster.local

  dealer:
    host: dealer-price.galoy-dev-addons.svc.cluster.local

  api:
    ingress:
      enabled: true
      host: localhost

mongodb:
  architecture: standalone
  persistence:
    enabled: false
  replicaCount: 1
  metrics:
    enabled: false
  initDbScripts: {}

redis:
  replica:
    replicaCount: 1
  master:
    persistence:
      enabled: false
  metrics:
    enabled: false
  sentinel:
    getMasterTimeout: 5

price:
  service:
    type: NodePort
  postgresql:
    primary:
      persistence:
        enabled: false

oathkeeper:
  secret:
    enabled: false

secrets:
  create: false

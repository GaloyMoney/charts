#@ load("@ytt:data", "data")

#@ def pipeline_image():
#@   return data.values.docker_registry + "/helm-charts-pipeline"
#@ end

#@ def task_image_config():
type: registry-image
source:
  username: #@ data.values.docker_registry_user
  password: #@ data.values.docker_registry_password
  repository: #@ pipeline_image()
#@ end

groups:
- name: bitcoind
  jobs: [ bitcoind-testflight ]
- name: image
  jobs: [ build-pipeline-image ]

jobs:
- name: build-pipeline-image
  serial: true
  plan:
  - {get: pipeline-image-def, trigger: true}
  - task: build
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: pipeline-image-def
      outputs:
      - name: image
      params:
        CONTEXT: pipeline-image-def/ci/image
      run:
        path: build
  - put: pipeline-image
    params:
      image: image/image.tar

- name: bitcoind-testflight
  serial: true
  plan:
  - in_parallel:
    - { get: bitcoind-chart, trigger: true }
    - { get: pipeline-tasks }
  - task: prepare-testflight
    config:
      platform: linux
      image_resource: #@ task_image_config()
      inputs:
      - name: pipeline-tasks
      - name: bitcoind-chart
        path: repo
      outputs:
      - name: testflight
      run:
        path: pipeline-tasks/ci/tasks/prepare-testflight.sh
  - put: tf-bitcoind-testflight
    tags: ["staging"]
    params:
      vars_files: [ testflight/bitcoind/terraform.tfvars ]
      terraform_source: testflight/bitcoind
      env_name_file: testflight/env_name
      vars:
        bitcoind_rpcpassword: #@ data.values.testflight_bitcoin_rpcpassword
  - task: smoke-test
    tags: ["staging"]
    config:
      platform: linux
      image_resource: #@ task_image_config()
      inputs:
      - name: pipeline-tasks
      - name: testflight
      params:
        BITCOIN_RPCPASSWORD: #@ data.values.testflight_bitcoin_rpcpassword
      run:
        path: pipeline-tasks/ci/tasks/bitcoind-smoketest.sh
  - put: tf-bitcoind-testflight
    tags: ["staging"]
    params:
      vars_files: [ testflight/bitcoind/terraform.tfvars ]
      terraform_source: testflight/bitcoind
      env_name_file: testflight/env_name
      action: destroy
      vars:
        bitcoind_rpcpassword: #@ data.values.testflight_bitcoin_rpcpassword
    get_params: { action: destroy }


resources:
- name: bitcoind-chart
  type: git
  source:
    paths: [ "charts/bitcoind/**/*" ]
    uri: #@ data.values.git_uri
    branch: #@ data.values.git_branch
    private_key: #@ data.values.github_private_key
- name: pipeline-tasks
  type: git
  source:
    paths: [ci/tasks/*, ci/testflight/*, Makefile]
    uri: #@ data.values.git_uri
    branch: #@ data.values.git_branch
    private_key: #@ data.values.github_private_key

- name: pipeline-image
  type: registry-image
  source:
    tag: latest
    username: #@ data.values.docker_registry_user
    password: #@ data.values.docker_registry_password
    repository: #@ pipeline_image()
- name: pipeline-image-def
  type: git
  source:
    paths: [ci/image/Dockerfile]
    uri: #@ data.values.git_uri
    branch: #@ data.values.git_branch
    private_key: #@ data.values.github_private_key

- name: tf-bitcoind-testflight
  type: terraform
  source:
    backend_type: gcs
    backend_config:
      bucket: #@ data.values.staging_state_bucket
      prefix: galoy-staging/services/bitcoind-testflight
      credentials: #@ data.values.staging_creds
    env:
      GOOGLE_CREDENTIALS: #@ data.values.staging_creds

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: latest

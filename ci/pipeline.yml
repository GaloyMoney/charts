#@ load("@ytt:data", "data")
#@ load("@ytt:template", "template")
#@ load("pipeline-fragments.lib.yml",
#@   "pipeline_image",
#@   "task_image_config",
#@   "testflight_job",
#@   "bump_in_deployments_job",
#@   "chart_repo_resource",
#@   "testflight_tf_resource")
#@ load("pipeline.star",
#@   "group_job_names",
#@   "bump_in_deployments_job_name",
#@   "chart_resource_name")

#@ bitcoin_charts = ["bitcoind", "lnd", "rtl", "specter"]
#@ def galoy_chart_vars():
bitcoind_rpcpassword: #@ data.values.testflight_bitcoind_rpcpassword
testflight_apollo_graph_id: #@ data.values.testflight_apollo_graph_id
testflight_apollo_key: #@ data.values.testflight_apollo_key
#@ end
#@ def bitcoin_chart_vars():
bitcoind_rpcpassword: #@ data.values.testflight_bitcoind_rpcpassword
#@ end

groups:
- name: galoy
  jobs: [ galoy-testflight ]
- name: bitcoin
  jobs: #@ group_job_names(bitcoin_charts, ["bitcoin-staging"])
- name: image
  jobs: [ build-pipeline-image]

jobs:
#@ for chart in bitcoin_charts:
- #@ testflight_job(chart, bitcoin_chart_vars())
- #@ bump_in_deployments_job(chart)
#@ end
- #@ testflight_job("galoy", galoy_chart_vars())

- name: bitcoin-staging
  serial: true
  plan:
  - in_parallel:
#@ for chart in bitcoin_charts:
    - get: #@ chart_resource_name(chart)
      passed:
      - #@ bump_in_deployments_job_name(chart)
      trigger: true
#@ end
    - { get: pipeline-tasks }
    - { get: galoy-deployments }
  - put: tf-bitcoin-staging
    tags: ["staging"]
    params:
      terraform_source: galoy-deployments/gcp/staging/bitcoin
      vars:
        bitcoind_rpcpassword: #@ data.values.staging_bitcoind_rpcpassword
        name_prefix: #@ data.values.staging_name_prefix
  - in_parallel:
    - task: bitcoind-smoke-test
      tags: ["staging"]
      config:
        platform: linux
        image_resource: #@ task_image_config()
        inputs:
        - name: pipeline-tasks
        params:
          BITCOIND_RPCPASSWORD: #@ data.values.staging_bitcoind_rpcpassword
          NAMESPACE: #@ data.values.staging_name_prefix + "-bitcoin"
        run:
          path: pipeline-tasks/ci/tasks/bitcoind-smoketest.sh
    - task: lnd-smoke-test
      tags: ["staging"]
      config:
        platform: linux
        image_resource: #@ task_image_config()
        inputs:
        - name: pipeline-tasks
        params:
          NAMESPACE: #@ data.values.staging_name_prefix + "-bitcoin"
        run:
          path: pipeline-tasks/ci/tasks/lnd-smoketest.sh
    - task: specter-smoke-test
      tags: ["staging"]
      config:
        platform: linux
        image_resource: #@ task_image_config()
        inputs:
        - name: pipeline-tasks
        params:
          NAMESPACE: #@ data.values.staging_name_prefix + "-bitcoin"
          HOST: #@ data.values.staging_specter_dns
          PORT: #@ data.values.staging_specter_port
        run:
          path: pipeline-tasks/ci/tasks/specter-smoketest.sh
    - task: rtl-smoke-test
      tags: ["staging"]
      config:
        platform: linux
        image_resource: #@ task_image_config()
        inputs:
        - name: pipeline-tasks
        params:
          NAMESPACE: #@ data.values.staging_name_prefix + "-bitcoin"
        run:
          path: pipeline-tasks/ci/tasks/rtl-smoketest.sh
  - put: cepler-out
    params:
      repository: galoy-deployments
      environment: gcp-staging-bitcoin


- name: build-pipeline-image
  serial: true
  plan:
  - {get: pipeline-image-def, trigger: true}
  - task: build
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: pipeline-image-def
      outputs:
      - name: image
      params:
        CONTEXT: pipeline-image-def/ci/image
      run:
        path: build
  - put: pipeline-image
    params:
      image: image/image.tar

resources:
#@ for chart in bitcoin_charts:
- #@ chart_repo_resource(chart)
- #@ testflight_tf_resource(chart)
#@ end

- #@ chart_repo_resource("galoy")
- #@ testflight_tf_resource("galoy")

- name: pipeline-tasks
  type: git
  source:
    paths: [ci/tasks/*, ci/testflight/*, Makefile]
    uri: #@ data.values.git_uri
    branch: #@ data.values.git_branch
    private_key: #@ data.values.github_private_key

- name: galoy-deployments
  type: git
  source:
    uri: #@ data.values.deployments_git_uri
    branch: #@ data.values.deployments_git_branch
    private_key: #@ data.values.github_private_key

- name: pipeline-image
  type: registry-image
  source:
    tag: latest
    username: #@ data.values.docker_registry_user
    password: #@ data.values.docker_registry_password
    repository: #@ pipeline_image()

- name: pipeline-image-def
  type: git
  source:
    paths: [ci/image/Dockerfile]
    uri: #@ data.values.git_uri
    branch: #@ data.values.git_branch
    private_key: #@ data.values.github_private_key

- name: tf-bitcoin-staging
  type: terraform
  source:
    env_name: default
    backend_type: gcs
    backend_config:
      bucket: #@ data.values.staging_state_bucket
      prefix: galoy-staging/services/bitcoin
      credentials: #@ data.values.staging_creds
    env:
      GOOGLE_CREDENTIALS: #@ data.values.staging_creds

- name: cepler-out
  type: cepler-out
  source:
    uri: #@ data.values.deployments_git_uri
    branch: #@ data.values.deployments_git_branch
    private_key: #@ data.values.github_private_key

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: latest

- name: cepler-out
  type: registry-image
  source:
    repository: cepler/cepler-concourse-resource
    tag: 0.6.4

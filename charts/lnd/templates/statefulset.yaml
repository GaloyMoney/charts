{{ $checksum := include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "lnd.fullname" . }}
  labels:
    {{- include "lnd.labels" . | nindent 4 }}
    kube-monkey/identifier: {{ .Release.Name }}
    {{- if .Values.labels }}
    {{- include "common.tplvalues.render" (dict "value" .Values.labels "context" $) | nindent 4 }}
    {{- end }}
spec:
  serviceName: {{ include "lnd.fullname" . }}
  selector:
    matchLabels:
      {{- include "lnd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ $checksum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "lnd.selectorLabels" . | nindent 8 }}
        kube-monkey/identifier: {{ .Release.Name }}
        {{- if .Values.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "lnd.serviceAccountName" . }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      initContainers:
        - name: copy-lnd-config
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ['sh', '-c', 'cp /configmap/lnd.conf /data/.lnd/lnd.conf']
          volumeMounts:
            - name: configmap
              mountPath: /configmap
            - name: config
              mountPath: /data/.lnd/
      containers:
        - name: init-wallet
          securityContext:
            runAsUser: 0
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ['/bin/sh']
          args:
          - '-c'
          - >
            ! test -f /data/.lnd/data/chain/bitcoin/testnet/admin.macaroon &&
            while ! test -f /data/.lnd/tls.cert; do sleep 1; done;
            apk update; apk add expect;
            /home/alpine/walletInit.exp {{.Values.global.network}} $LND_PASS;
            sleep infinity;
          env:
          {{- if ne .Values.global.network "regtest" }}
          - name: LND_PASS
            valueFrom:
              secretKeyRef:
                name: {{ printf "%s-pass" (include "lnd.fullname" .) }}
                key: password
          {{- end }}
          - name: NETWORK
            valueFrom:
              secretKeyRef:
                name: network
                key: network
          volumeMounts:
          - name: wallet-init
            mountPath: /home/alpine/walletInit.exp
            subPath: walletInit.exp
          - name: lnd-storage
            mountPath: /data/.lnd
        - name: export-secrets
          securityContext:
            runAsUser: 0
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ['/bin/sh']
          args:
          - '-c'
          - >
            while ! test -f /data/.lnd/data/chain/bitcoin/$NETWORK/admin.macaroon; do sleep 1; done;
            home/alpine/exportSecrets.sh
          env:
          - name: NETWORK
            valueFrom:
              secretKeyRef:
                name: network
                key: network
          volumeMounts:
          - name: export-secrets
            mountPath: /home/alpine/exportSecrets.sh
            subPath: exportSecrets.sh
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          ports:
            - name: rpc
              containerPort: {{ .Values.service.ports.rpc }}
            - name: p2p
              containerPort: {{ .Values.service.ports.p2p }}
            - name: rest
              containerPort: {{ .Values.service.ports.rest }}
          volumeMounts:
            - name: lnd-storage
              mountPath: /data/.lnd
            - name: config
              mountPath: /data/.lnd/lnd.conf
              subPath: lnd.conf
            - name: lnd-password
              mountPath: /tmp/
          readinessProbe:
            exec:
              command:
              - lncli
              - -n
              - {{ $.Values.global.network}}
              - getinfo
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
              - lncli
              - -n
              - {{ $.Values.global.network}}
              - getinfo
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 3
            initialDelaySeconds: 600
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if ne .Values.global.network "regtest" }}
          env:
          - name: LND_PASS
            valueFrom:
              secretKeyRef:
                name: {{ printf "%s-pass" (include "lnd.fullname" .) }}
                key: password
          {{- end }}
      volumes:
        - name: wallet-init
          configMap:
            name: {{ printf "%s-wallet-init" (include "lnd.fullname" .) }}
            defaultMode: 0777
        - name: export-secrets
          configMap:
            name: {{ printf "%s-export-secrets" (include "lnd.fullname" .) }}
            defaultMode: 0777
        - name: config
          emptyDir: {}
        - name: configmap
          configMap:
            name: {{ include "lnd.fullname" . }}
        - name: lnd-password
          secret:
            secretName: {{ printf "%s-pass" (include "lnd.fullname" .) }}
        - name: lnd-storage
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "lnd.fullname" $) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

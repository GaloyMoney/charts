{{ $checksum := include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "lnd.fullname" . }}
  labels:
    {{- include "lnd.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "lnd.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "lnd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: $checksum
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "lnd.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "lnd.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      initContainers:
        - name: copy-lnd-config
          image: busybox
          command: ['sh', '-c', 'cp /configmap/lnd.conf /root/.lnd/lnd.conf']
          volumeMounts:
            - name: configmap
              mountPath: /configmap
            - name: config
              mountPath: /root/.lnd/
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh","-c"]
          args: ["/root/init.sh"]
          ports:
            - name: rpc
              containerPort: {{ .Values.service.ports.rpc }}
            - name: p2p
              containerPort: {{ .Values.service.ports.p2p }}
            - name: rest
              containerPort: {{ .Values.service.ports.rest }}
          volumeMounts:
            - name: lnd-storage
              mountPath: /root/.lnd
            - name: config
              mountPath: /root/.lnd/lnd.conf
              subPath: lnd.conf
            - name: lnd-init
              mountPath: /root/init.sh
              subPath: init.sh
          readinessProbe:
            exec:
              command:
              - lncli
              - -n
              - {{ $.Values.global.network}}
              - getinfo
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
              - lncli
              - -n
              - {{ $.Values.global.network}}
              - getinfo
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 3
            initialDelaySeconds: 600
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if ne .Values.global.network "regtest" }}
          env:
          - name: LND_PASS
            valueFrom:
              secretKeyRef:
                name: {{ printf "%s-pass" (include "lnd.fullname" .) }}
                key: password
          {{- end }}
      volumes:
        - name: lnd-init
          configMap:
            name: {{ printf "%s-init" (include "lnd.fullname" .) }}
            defaultMode: 0777
        - name: config
          emptyDir: {}
        - name: configmap
          configMap:
            name: {{ include "lnd.fullname" . }}
        - name: lnd-storage
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "lnd.fullname" $) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

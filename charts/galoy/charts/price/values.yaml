# Default values for price.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
image:
  repository: us.gcr.io/galoy-org/price
  digest: "sha256:f69ce5cd409254e5d37be1e5fc0d957545333d57bf7892a084cb6f3d6934bbea"
  git_ref: "705dd6a"
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  runAsUser: 1000
resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

nodeSelector: {}
tolerations: []
affinity: {}
realtime:
  config: {}
  image:
    repository: us.gcr.io/galoy-org/price
    digest: "sha256:f69ce5cd409254e5d37be1e5fc0d957545333d57bf7892a084cb6f3d6934bbea"
    git_ref: "705dd6a"
  service:
    type: ClusterIP
    prometheus: 9464
    grpc: 50051
  podAnnotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "9464"
    prometheus.io/scrape: "true"

history:
  valuesOverride: {}
  image:
    repository: us.gcr.io/galoy-org/price-history
    digest: "sha256:dbd53f48e97e6b662da47fbe1f61ec8cd2044d122f4465bd7f2b2a45d98a5f9e"
  service:
    type: ClusterIP
    prometheus: 9464
    grpc: 50052
  migrateImage:
    repository: us.gcr.io/galoy-org/price-history-migrate
    digest: sha256:a30f0f4375a60341151f1c7f3adcdf51879f202b834f18ded7db858b85c9b8cf
  postgresqlHost: postgresql

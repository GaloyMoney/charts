# Default values for price.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
image:
  repository: us.gcr.io/galoy-org/price
  digest: "sha256:f69ce5cd409254e5d37be1e5fc0d957545333d57bf7892a084cb6f3d6934bbea"
  git_ref: "705dd6a"
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  runAsUser: 1000
resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

nodeSelector: {}
tolerations: []
affinity: {}
realtime:
  tracing:
    otelExporterOtlpEndpoint: http://localhost:4318/v1/traces
    otelServiceName: galoy-price-realtime-dev
  config: {}
  image:
    repository: us.gcr.io/galoy-org/price
    digest: "sha256:84cf2cded806e183997d9d1272440b46f47314a798e21601acce73987b4f378a"
    git_ref: "39c302f"
  service:
    type: ClusterIP
    prometheus: 9464
    grpc: 50051
  podAnnotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "9464"
    prometheus.io/scrape: "true"
history:
  notificationsEndpoint: notifications:6685
  tracing:
    otelExporterOtlpEndpoint: http://localhost:4318/v1/traces
    otelServiceName: galoy-price-history-dev
  valuesOverride: {}
  image:
    repository: us.gcr.io/galoy-org/price-history
    digest: "sha256:6e232f6fddb14691589e0b229f07dea90003969a80cc6f9faa63932a21178766"
  service:
    type: ClusterIP
    prometheus: 9464
    grpc: 50052
  migrateImage:
    repository: us.gcr.io/galoy-org/price-history-migrate
    digest: sha256:b2752bf808da87e3c1989eb24bd2e828d0897b006c53f4cad4d7fc808749a1c7
  postgresqlHost: postgresql
  cron:
    resources: {}
  migrationJob:
    resources: {}

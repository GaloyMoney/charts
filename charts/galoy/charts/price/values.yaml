# Default values for price.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
image:
  repository: us.gcr.io/galoy-org/price
  digest: "sha256:f69ce5cd409254e5d37be1e5fc0d957545333d57bf7892a084cb6f3d6934bbea"
  git_ref: "705dd6a"
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  runAsUser: 1000
resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

nodeSelector: {}
tolerations: []
affinity: {}
realtime:
  tracing:
    otelExporterOtlpEndpoint: http://localhost:4318/v1/traces
    otelServiceName: galoy-price-realtime-dev
  config: {}
  image:
    repository: us.gcr.io/galoy-org/price
    digest: "sha256:c97df36b3f8ec8514f0608ccfe51442acde2e1429b9b4c26905efea34a601e7a"
    git_ref: "a5e5cd3"
  service:
    type: ClusterIP
    prometheus: 9464
    grpc: 50051
  podAnnotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "9464"
    prometheus.io/scrape: "true"
history:
  notificationsEndpoint: notifications:6685
  tracing:
    otelExporterOtlpEndpoint: http://localhost:4318/v1/traces
    otelServiceName: galoy-price-history-dev
  valuesOverride: {}
  image:
    repository: us.gcr.io/galoy-org/price-history
    digest: "sha256:b85c45c1fca6f532e0052888153ad35a9bf54766e9d243e768d0a95b1cb336e4"
  service:
    type: ClusterIP
    prometheus: 9464
    grpc: 50052
  migrateImage:
    repository: us.gcr.io/galoy-org/price-history-migrate
    digest: sha256:32ccd1838afe5fef7b9d0267cc1f999e1b2cb1381e142cd95876764fc7600c5d
  postgresqlHost: postgresql
  cron:
    resources: {}
  migrationJob:
    resources: {}

global:
  network: mainnet
galoy:
  name: "Galoy Wallet"
  apollo:
    playground: false
# todo: this should be injected in a configmap from bitcoind
bitcoind:
  port: 8332
lnd1: {}
lnd2: {}
ca:
  CAEmail: dev@galoy.io
image:
  repository: us.gcr.io/galoy-org/galoy-app
  digest: "sha256:6f56f4bca6eba06df369d735c053bb214473cc2ef7e9a61b9ab9e79dc6b7f834"
  git_ref: "6b65689" # Not used by helm
mongodbMigrateImage:
  repository: us.gcr.io/galoy-org/galoy-app-migrate
  digest: "sha256:5f3f60dbc84cf9f5569079b7e9c6c75b7fb2cb9834b2569f5924446ccc7ef6aa"
jaegerHost: localhost
tracingPrefix: "galoy"
deployment:
  - name: graphql-admin
    appEntrypoint: "lib/servers/graphql-admin-server.js"
    healthz: true
    targetPort: 4001
    replicaCount: 1
  - name: api
    command: /nodejs/bin/node
    appEntrypoint: "lib/servers/graphql-main-server.js"
    healthz: true
    targetPort: 4002
    replicaCount: 2
    reportToApollo: true
  - name: exporter
    appEntrypoint: "lib/servers/exporter.js"
    healthz: true
    targetPort: 3000
    replicaCount: 1
    podAnnotations:
      prometheus.io/path: /metrics
      prometheus.io/port: "3000"
      prometheus.io/scrape: "true"
  - name: trigger
    appEntrypoint: "lib/servers/trigger.js"
    healthz: true
    targetPort: 8888
    replicaCount: 1
    timeoutSeconds: 30
    # cpu request: 0.001
service:
  - name: graphql
    type: NodePort
    targetPort: 4000
    port: 4000
  - name: graphql-admin
    type: NodePort
    targetPort: 4001
    port: 4001
  - name: api
    type: NodePort
    targetPort: 4002
    port: 4002
  - name: trigger
    type: ClusterIP
    targetPort: 8888
    port: 8888
cron:
  - name: cronjob
    appEntrypoint: "lib/servers/cron.js"
    schedule: "0 2 * * *"
  - name: balance-notif
    appEntrypoint: "lib/servers/daily-balance-notification.js"
    schedule: "0 14 * * *"
mongobackup:
  bucketName: galoy-staging-backups
  mongoToolsVersion: 4.2.14-r6
  image:
    repository: us.gcr.io/galoy-org/mongo-backup
    digest: "sha256:4cfc197ea082ef3dae2d4321a9dfa31ef185f43d578a37a224095b75de656e6a"
    git_ref: 872b70e
loglevel: debug
needFirebaseServiceAccount: true
twilio: true
# value can be set here, or override with helm,
# ie: helm upgrade -i --set twilio.TWILIO_PHONE_NUMBER=6505550001,TWILIO_ACCOUNT_SID=AKBQWN...
# twilio:
#   TWILIO_PHONE_NUMBER: "phone"
#   TWILIO_ACCOUNT_SID: "sid"
#   TWILIO_AUTH_TOKEN: "authtoken"
redis:
  master:
    persistence:
      enabled: true
  auth:
    password: password
  sentinel:
    enabled: true
  metrics:
    enabled: true
mongodbaddress: "galoy-mongodb-0.galoy-mongodb-headless,galoy-mongodb-1.galoy-mongodb-headless,galoy-mongodb-2.galoy-mongodb-headless"
mongodb:
  initdbScripts:
    grant_user_admin_role.sh: |
      isMaster=$(mongo admin -u root -p "$MONGODB_ROOT_PASSWORD" --eval "rs.isMaster().ismaster" | tail -1 | tr -d '\n')
      if [ "$isMaster" == "true" ]; then
      mongo admin -u root -p $MONGODB_ROOT_PASSWORD << EOF
        use admin;
        db.grantRolesToUser('root', [ {role: "userAdmin", db: "galoy"} ]);
      EOF
      fi;
  architecture: replicaset
  auth:
    existingSecret: galoy-mongodb
    usernames: [testGaloy]
    databases: [galoy]
  labels:
    kube-monkey/enabled: enabled
    kube-monkey/identifier: mongodb
    kube-monkey/kill-mode: fixed
    kube-monkey/kill-value: "1"
    kube-monkey/mtbf: "8"
  podLabels:
    kube-monkey/enabled: enabled
    kube-monkey/identifier: mongodb
  replicaCount: 3
  persistence:
    enabled: true
  arbiter:
    enabled: false
  readinessProbe:
    enabled: false
  customReadinessProbe:
    exec:
      command:
        - mongo
        - --disableImplicitSessions
        - --eval
        - "db.adminCommand('ping')"
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## Prometheus Exporter / Metrics
  ## TODO: Could be useful for having mongo metrics
  metrics:
    enabled: true
## Warning: Setting this to true will disable automatic mongodb backups
## It is only intended for use in development environments
devDisableMongoBackup: false
dealer_price:
  host: dealer-price.namespace.svc.cluster.local
  port: 50055
price:
  history:
    postgresqlHost: galoy-postgresql
    host: galoy-price-history
    port: 50052
postgresql:
  enabled: true
  auth:
    enablePostgresUser: false
    username: price-history
    database: price-history
    existingSecret: galoy-price-history-postgres-creds

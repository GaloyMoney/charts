apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.trigger.name }}
  labels:
    app: {{ .Values.trigger.name }}
    app.kubernetes.io/managed-by: Helm
    kube-monkey/enabled: enabled
    kube-monkey/identifier: {{ .Values.trigger.name }}
    kube-monkey/kill-mode: fixed
    kube-monkey/kill-value: "1"
    kube-monkey/mtbf: "8"
spec:
  replicas: {{ .Values.trigger.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.trigger.name }}
  template:
    metadata:
      name: {{ .Values.trigger.name }}
      labels:
        app: {{ .Values.trigger.name }}
        kube-monkey/enabled: enabled
        kube-monkey/identifier: {{ .Values.trigger.name }}
        allow-to-lnd: "true"
        allow-to-bitcoind: "true"
    {{- with .Values.trigger.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    spec:
      serviceAccountName: {{ .Release.Name }}-serviceaccount
      initContainers:
      - name: wait-for-mongodb-migrate
        image: "groundnuty/k8s-wait-for:v1.5.1"
        args:
        - "job-wr"
        - "{{ $.Release.Name }}-mongodb-migrate-{{ $.Release.Revision }}"
      containers:
        - name: {{ .Values.trigger.name }}
          image: "{{ .Values.image.repository }}@{{ .Values.image.digest }}"
          args:
          - "-r"
          - "/app/lib/services/tracing.js"
          - {{ .Values.trigger.appEntrypoint }}
          volumeMounts:
          {{- if .Values.needFirebaseServiceAccount }}
          - name: firebase-serviceaccount
            mountPath: "/tmp/firebase-serviceaccount"
            readOnly: true
          {{- end }}
          {{- if .Values.backup.googlecloud.enabled }}
          - name: "service-account"
            mountPath: "/var/secret/cloud.google.com"
          {{- end }}
          - name: "custom-yaml"
            mountPath: "/var/yaml/"
          {{- if .Values.trigger.targetPort }}
          ports:
            - name: http
              containerPort: {{ .Values.trigger.targetPort }}
              protocol: TCP
          {{- end }}
          resources:
            requests:
              cpu: 100m
            limits:
              cpu: 1000m
          env:
            - name: HELMREVISION
              value: {{ $.Release.Revision | quote }}
            - name: NODE_ENV
              value: production
            - name: JAEGER_HOST
              value: {{ .Values.jaegerHost }}
            - name: TRACING_SERVICE_NAME
              value: {{ .Values.tracingPrefix }}-{{ .Values.trigger.name }}
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $.Release.Name }}-mongodb
                  key: "mongodb-password"
            - name: MONGODB_USER
              value: "testGaloy"
            - name: MONGODB_ADDRESS
              value: {{ .Values.mongodbaddress }}
            - name: LND1_DNS
              value: {{ .Values.lnd1.dns }}
            - name: LND1_MACAROON
              valueFrom:
                secretKeyRef:
                  name: lnd1-credentials
                  key: admin_macaroon_base64
            - name: LND1_TLS
              valueFrom:
                secretKeyRef:
                  name: lnd1-credentials
                  key: tls_base64
            - name: LND1_PUBKEY
              valueFrom:
                secretKeyRef:
                  name: lnd1-pubkey
                  key: pubkey

            - name: LND2_DNS
              value: {{ .Values.lnd2.dns }}
            - name: LND2_MACAROON
              valueFrom:
                secretKeyRef:
                  name: lnd2-credentials
                  key: admin_macaroon_base64
            - name: LND2_TLS
              valueFrom:
                secretKeyRef:
                  name: lnd2-credentials
                  key: tls_base64
            - name: LND2_PUBKEY
              valueFrom:
                secretKeyRef:
                  name: lnd2-pubkey
                  key: pubkey

            - name: BITCOINDADDR
              value: {{ .Values.bitcoind.address }}
            - name: BITCOINDRPCPASS
              valueFrom:
                secretKeyRef:
                  name: bitcoind-rpcpassword
                  key: password
            - name: BITCOINDPORT
              value: {{ .Values.bitcoind.port | quote }}

            - name: GEETEST_ID
              valueFrom:
                secretKeyRef:
                  name: geetest-key
                  key: id
            - name: GEETEST_KEY
              valueFrom:
                secretKeyRef:
                  name: geetest-key
                  key: key  

            - name: REDIS_MASTER_NAME
              value: "mymaster"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $.Release.Name }}-redis
                  key: "redis-password"
            - name: REDIS_0_DNS
              value: "galoy-redis-node-0.galoy-redis-headless"
            - name: REDIS_1_DNS
              value: "galoy-redis-node-1.galoy-redis-headless"
            - name: REDIS_2_DNS
              value: "galoy-redis-node-2.galoy-redis-headless"

            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: secret
            - name: NETWORK
              value: {{ .Values.global.network }}
            {{- if .Values.loglevel}}
            - name: LOGLEVEL
              value: {{ .Values.loglevel }}
            {{- end }}
            {{- if .Values.needFirebaseServiceAccount }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/tmp/firebase-serviceaccount/galoyapp-firebase-serviceaccount.json"
            {{- end }}
            {{- if .Values.backup.googlecloud.enabled }}
            - name: "GCS_APPLICATION_CREDENTIALS"
              value: "/var/secret/cloud.google.com/gcs-sa-key.json"
            {{- end }}
            {{- if .Values.backup.dropbox.enabled }}
            - name: DROPBOX_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backup.dropbox.secretName }}
                  key: token
            {{- end }}
            {{- if .Values.backup.nextcloud.enabled }}
            - name: NEXTCLOUD_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backup.nextcloud.secretName }}
                  key: host
            - name: NEXTCLOUD_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backup.nextcloud.secretName }}
                  key: user
            - name: NEXTCLOUD_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backup.nextcloud.secretName }}
                  key: password
            {{- end }}
            {{ if .Values.trigger.reportToApollo }}
            - name: APOLLO_GRAPH_VARIANT
              value: current
            - name: APOLLO_SCHEMA_REPORTING
              value: "true"
            - name: APOLLO_GRAPH_ID
              valueFrom:
                secretKeyRef:
                  name: galoy-apollo-secret
                  key: id
            - name: APOLLO_KEY
              valueFrom:
                secretKeyRef:
                  name: galoy-apollo-secret
                  key: key
            {{- end }}
            - name: TWILIO_PHONE_NUMBER
              valueFrom:
                secretKeyRef:
                  name: twilio-secret
                  key: TWILIO_PHONE_NUMBER
            - name: TWILIO_ACCOUNT_SID
              valueFrom:
                secretKeyRef:
                  name: twilio-secret
                  key: TWILIO_ACCOUNT_SID
            - name: TWILIO_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: twilio-secret
                  key: TWILIO_AUTH_TOKEN
            - name: PRICE_SERVER_HOST
              value: "{{ .Values.dealer_price.host }}"
            - name: PRICE_SERVER_PORT
              value: "{{ .Values.dealer_price.port }}"

            - name: PRICE_HISTORY_HOST
              value: "{{ $.Values.price.history.host }}"
            - name: PRICE_HISTORY_PORT
              value: "{{ $.Values.price.history.port }}"
          {{- if .Values.trigger.healthz }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.trigger.targetPort }}
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 5
            timeoutSeconds: {{ .Values.trigger.timeoutSeconds | default 1 }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.trigger.targetPort }}
            initialDelaySeconds: 5
            failureThreshold: 5
            successThreshold: 2
            timeoutSeconds: {{ .Values.trigger.timeoutSeconds | default 1 }}
          {{- end }}
      volumes:
      {{- if .Values.needFirebaseServiceAccount }}
      - name: firebase-serviceaccount
        secret:
          secretName: galoyapp-firebase-serviceaccount
      {{- end }}
      {{- if .Values.backup.googlecloud.enabled }}
      - name: "service-account"
        secret:
          secretName: {{ .Values.backup.googlecloud.secretName}}
      {{- end }}
      - name: "custom-yaml"
        secret:
          secretName: "galoy-config-map"

{{- if .Values.signer.enabled }}
{{ $checksum := include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "lnd-signer.fullname" . }}
  labels:
    {{- include "lnd-signer.labels" . | nindent 4 }}
    {{- if .Values.kubemonkey.enabled }}
    kube-monkey/enabled: enabled
    kube-monkey/identifier: {{ .Release.Name }}
    kube-monkey/kill-mode: fixed
    kube-monkey/kill-value: "1"
    kube-monkey/mtbf: "2"
    {{- end }}
    {{- if .Values.labels }}
    {{- include "common.tplvalues.render" (dict "value" .Values.labels "context" $) | nindent 4 }}
    {{- end }}
spec:
  serviceName: {{ include "lnd-signer.fullname" . }}
  selector:
    matchLabels:
      {{- include "lnd-signer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      annotations:
        checksum/config: {{ $checksum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "lnd-signer.selectorLabels" . | nindent 8 }}
        allow-to-lnd: "true"
        {{- if .Values.kubemonkey.enabled }}
        kube-monkey/enabled: enabled
        kube-monkey/identifier: {{ .Release.Name }}
        {{- end }}
        {{- if .Values.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "lnd-signer.serviceAccountName" . }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      initContainers:
        - name: copy-signer-config
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command:
          - 'sh'
          - '-c'
          - |
            cat <<EOF > /root/.lnd/lnd.conf
            $(cat /configmap/lnd.conf)
            EOF
          volumeMounts:
            - name: configmap
              mountPath: /configmap
            - name: config
              mountPath: /root/.lnd/
      containers:
        {{- if and (ne .Values.global.network "regtest") .Values.autoGenerateSeed.enabled }}
        - name: init-wallet
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ['/bin/sh']
          args:
          - '-c'
          - |
            set -e
            if lncli -n {{ $.Values.global.network}} state | grep "WAITING_TO_START" ; then
              exit 0;
            fi
            lncli -n {{ $.Values.global.network}} state
            if [ ! -f /root/.lnd/data/chain/bitcoin/{{ $.Values.global.network}}/admin.macaroon ]; then
              while ! test -f /root/.lnd/tls.cert; do sleep 1; done
              apk update; apk add expect
              /home/alpine/walletInit.exp {{ $.Values.global.network}} $LND_PASS
            fi
            # Trap is required otherwise signals are not handled
            # https://stackoverflow.com/questions/45148381/why-cant-i-ctrl-c-a-sleep-infinity-in-docker-when-it-runs-as-pid-1
            trap "echo shutting down; exit 0" SIGKILL SIGTERM
            while true; do sleep 1; done
          env:
          - name: LND_PASS
            valueFrom:
              secretKeyRef:
                name: {{ printf "%s-pass" (include "lnd-signer.fullname" .) }}
                key: password
          volumeMounts:
          - name: wallet-init
            mountPath: /home/alpine/walletInit.exp
            subPath: walletInit.exp
          - name: lnd-storage
            mountPath: /root/.lnd
        {{- end }}
        - name: export-secrets
          image: "{{ .Values.sidecarImage.repository }}@{{ .Values.sidecarImage.digest }}"
          command: ['/bin/sh']
          args:
          - '-c'
          - |
            lncli -n={{ $.Values.global.network}} getinfo
            while [[ $? != 0 ]]; do sleep 1; lncli -n={{ $.Values.global.network}} getinfo; done
            /home/alpine/exportSecrets.sh
            trap "echo shutting down; exit 0" SIGKILL SIGTERM
            while true; do sleep 1; done
          volumeMounts:
          - name: export-secrets
            mountPath: /home/alpine/exportSecrets.sh
            subPath: exportSecrets.sh
          - name: lnd-storage
            mountPath: /root/.lnd
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: rpc
              containerPort: {{ .Values.apiService.ports.rpc }}
          volumeMounts:
            - name: lnd-storage
              mountPath: /root/.lnd
            - name: config
              mountPath: /root/.lnd/lnd.conf
              subPath: lnd.conf
            {{- if ne .Values.global.network "regtest" }}
            - name: lnd-password
              mountPath: /tmp/lnd-pass
              subPath: password
            {{- end }}
          startupProbe:
            exec:
              command:
              - sh
              - -c
              - "lncli -n {{ $.Values.global.network}} state | grep -q SERVER_ACTIVE"
            failureThreshold: 540
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - "lncli -n {{ $.Values.global.network}} state | grep -q SERVER_ACTIVE"
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - "lncli -n {{ $.Values.global.network}} state | grep -q SERVER_ACTIVE"
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 3
            initialDelaySeconds: 600
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        {{- if ne .Values.global.network "regtest" }}
        - name: wallet-init
          configMap:
            name: {{ printf "%s-wallet-init" (include "lnd-signer.fullname" .) }}
            defaultMode: 0777
        {{- end }}
        - name: export-secrets
          configMap:
            name: {{ printf "%s-export-secrets" (include "lnd-signer.fullname" .) }}
            defaultMode: 0777
        - name: config
          emptyDir: {}
        - name: configmap
          configMap:
            name: {{ include "lnd-signer.fullname" . }}
        {{- if ne .Values.global.network "regtest" }}
        - name: lnd-password
          secret:
            secretName: {{ printf "%s-pass" (include "lnd-signer.fullname" .) }}
        {{- end }}
        - name: lnd-storage
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "lnd-signer.fullname" $) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ printf "%s-export-secrets" (include "lnd.fullname" .) }}
  labels:
    {{- include "lnd.labels" . | nindent 4 }}
data:
  exportSecrets.sh: |
    #!/bin/sh
    PUBKEY=$(lncli -n {{.Values.global.network}} getinfo | jq -r .identity_pubkey)
    kubectl create secret generic {{ include "lnd.fullname" . }}-pubkey --from-literal=pubkey=$PUBKEY --dry-run=client -o yaml | kubectl apply -f -

    export TLS=$(base64 /root/.lnd/tls.cert | tr -d '\n\r')
{{- if .Values.watchonly.enabled }}
    export MACAROON=$(base64 /root/.lnd/data/chain/bitcoin/$NETWORK/admin.macaroon | tr -d '\n\r')

    mkdir macaroons
    cp /root/.lnd/data/chain/bitcoin/$NETWORK/*.macaroon macaroons

    kubectl create secret generic {{ include "lnd.fullname" . }}-credentials \
    --from-literal=tls_base64=$TLS --from-file=/root/.lnd/tls.cert \
    --from-literal=admin_macaroon_base64=$MACAROON --from-file=macaroons \
    --dry-run=client -o yaml | kubectl apply -f -
{{- end }}
{{- if .Values.signer.enabled }}
    if ! ls /root/.lnd/data/chain/bitcoin/{{.Values.global.network}}/signer.custom.macaroon; then
      lncli -n={{.Values.global.network}} bakemacaroon \
       --save_to /root/.lnd/data/chain/bitcoin/{{.Values.global.network}}/signer.custom.macaroon \
       message:write signer:generate address:read onchain:write
    fi

    export MACAROON=$(base64 /root/.lnd/data/chain/bitcoin/{{.Values.global.network}}/signer.custom.macaroon | tr -d '\n\r')

    kubectl create secret generic {{ include "lnd.fullname" . }}-credentials \
     --from-literal=tls_base64=$TLS \
     --from-file=/root/.lnd/tls.cert \
     --from-literal=signer_macaroon_base64=$MACAROON \
     --dry-run=client -o yaml | kubectl apply -f -

    mkdir accounts
    lncli -n {{.Values.global.network}} wallet accounts list > accounts/accounts-signer

    kubectl create secret generic {{ include "lnd.fullname" . }}-accounts \
     --from-file=accounts \
     --dry-run=client -o yaml | kubectl apply -f -
{{- end }}

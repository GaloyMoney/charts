grafana:
  persistence:
    enabled: true
  ingress:
    enabled: false

  deploymentStrategy:
    type: Recreate

  plugins:
    - https://github.com/doitintl/bigquery-grafana/archive/master.zip;doit-bigquery-datasource
  
  grafana.ini:
    plugins:
      allow_loading_unsigned_plugins: "doitintl-bigquery-datasource"
  
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        url: http://monitoring-prometheus-server
        isDefault: true

prometheus:
  alertmanager:
    enabled: false

  nodeExporter:
    enabled: true

  kubeStateMetrics:
    enabled: true

  ## kube-state-metrics sub-chart configurable values
  ## Please see https://github.com/helm/charts/tree/master/stable/kube-state-metrics
  ##
  kube-state-metrics:
    podAnnotations:
      prometheus.io/path: /metrics
      prometheus.io/scrape: "true"
      prometheus.io/port: "8080"

  server:
    statefulSet:
      enabled: true

    retention: "365d"

  pushgateway:
    enabled: false

  ## Prometheus server ConfigMap entries
  ##
  serverFiles:
    prometheus.yml:
      rule_files:
        - /etc/config/recording_rules.yml
        - /etc/config/alerting_rules.yml
      ## Below two files are DEPRECATED will be removed from this default values file
        - /etc/config/rules
        - /etc/config/alerts

      scrape_configs:
        - job_name: 'lnd'

          scrape_interval: 300s
          scrape_timeout: 60s

          kubernetes_sd_configs:
            - role: pod

          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_name]
              regex: '.*lnd.*'
              action: keep
            - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_instance]
              action: replace
              target_label: pod
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
              target_label: __address__
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: namespace

        - job_name: 'dealer'

          scrape_interval: 1m
          scrape_timeout: 20s

          kubernetes_sd_configs:
            - role: pod

          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_name]
              regex: '.*dealer.*'
              action: keep
            - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_instance]
              action: replace
              target_label: pod
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
              target_label: __address__
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: namespace

        - job_name: 'kube-state-metrics'

          scrape_interval: 5s
          scrape_timeout: 4s

          kubernetes_sd_configs:
            - role: pod

          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_name]
              regex: 'prometheus-kube-state-metrics-.*'
              action: keep

        - job_name: 'kubernetes-service-endpoints'

          kubernetes_sd_configs:
            - role: endpoints

          relabel_configs:
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
              action: replace
              target_label: __address__
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
            - action: labelmap
              regex: __meta_kubernetes_service_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: kubernetes_namespace
            - source_labels: [__meta_kubernetes_service_name]
              action: replace
              target_label: kubernetes_name
            - source_labels: [__meta_kubernetes_pod_node_name]
              action: replace
              target_label: kubernetes_node
            - source_labels: [__meta_kubernetes_pod_name]
              regex: 'prometheus-kube-state-metrics-.*'
              action: drop

        - job_name: 'kubernetes-pods'

          scrape_interval: 10m
          scrape_timeout: 45s

          kubernetes_sd_configs:
            - role: pod

          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
              target_label: __address__
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: kubernetes_namespace
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: kubernetes_pod_name
            - source_labels: [__meta_kubernetes_pod_name]
              regex: 'prometheus-kube-state-metrics-.*'
              action: drop
            - source_labels: [__meta_kubernetes_pod_name]
              regex: 'lnd.*'
              action: drop
            - source_labels: [__meta_kubernetes_pod_name]
              regex: 'dealer.*'
              action: drop

        # - job_name: 'kubernetes-services'

        #   metrics_path: /probe
        #   params:
        #     module: [http_2xx]

        #   kubernetes_sd_configs:
        #     - role: service

        #   relabel_configs:
        #     - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
        #       action: keep
        #       regex: true
        #     - source_labels: [__address__]
        #       target_label: __param_target
        #     - target_label: __address__
        #       replacement: blackbox
        #     - source_labels: [__param_target]
        #       target_label: instance
        #     - action: labelmap
        #       regex: __meta_kubernetes_service_label_(.+)
        #     - source_labels: [__meta_kubernetes_namespace]
        #       target_label: kubernetes_namespace
        #     - source_labels: [__meta_kubernetes_service_name]
        #       target_label: kubernetes_name

  # adds additional scrape configs to prometheus.yml
  # must be a string so you have to add a | after extraScrapeConfigs:
  # example adds prometheus-blackbox-exporter scrape config
  extraScrapeConfigs: ""

prometheus-blackbox-exporter:
  secretConfig: true
  config:
    modules:
      buildParameters:
        prober: http
        timeout: 3s
        http:
          method: POST
          headers:
            Content-Type: application/json
          body: '{"query":"query monitoringPing { mobileVersions { platform currentSupported minSupported } }","variables":{}}'
      walletAuth:
        prober: http
        timeout: 30s
        http:
          method: POST
          fail_if_body_matches_regexp:
            - "errors+"
          headers:
            Content-Type: application/json
          body: '{"query":"query monitoringPingAuth { me { __typename id phone quizQuestions { __typename question{ id earnAmount } } defaultAccount { __typename id defaultWalletId wallets { __typename id balance walletCurrency transactions(first: 3) { pageInfo { hasNextPage } edges { cursor node { __typename id status direction memo createdAt settlementAmount settlementFee settlementPrice { base offset } initiationVia { __typename ... on InitiationViaIntraLedger { counterPartyWalletId counterPartyUsername } ... on InitiationViaLn { paymentHash } ... on InitiationViaOnChain { address } } settlementVia { __typename ... on SettlementViaIntraLedger { counterPartyWalletId counterPartyUsername } ... on SettlementViaLn { paymentSecret } ... on SettlementViaOnChain { transactionHash } } } } } } } } }","variables":{}}'

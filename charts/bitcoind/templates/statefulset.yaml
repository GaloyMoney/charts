apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "bitcoind.fullname" . }}
  labels:
    {{- include "bitcoind.labels" . | nindent 4 }}
    {{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  serviceName: {{ include "bitcoind.fullname" . }}
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "bitcoind.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
        prometheus.io/path: /metrics
        prometheus.io/port: {{ .Values.service.ports.metrics | quote }}
        prometheus.io/scrape: "true"
    {{- end }}
      labels:
        {{- include "bitcoind.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "bitcoind.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: copy-bitcoind-config
          image: busybox
          command:
          - 'sh'
          - '-c'
          - |
            cat <<EOF > /data/.bitcoin/bitcoin.conf
            rpcpassword=$(cat /rpcpassword/password)
            $(cat /configmap/bitcoin.conf)
            EOF
          volumeMounts:
            - name: configmap
              mountPath: /configmap
            - name: rpcpassword
              mountPath: /rpcpassword
            - name: config
              mountPath: /data/.bitcoin/
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: rpc
              containerPort: {{ .Values.global.service.ports.rpc }}
            - name: p2p
              containerPort: {{ .Values.service.ports.p2p }}
            - name: zmqpubrawtx
              containerPort: {{ .Values.service.ports.zmqpubrawtx }}
            - name: zmqpubrawblock
              containerPort: {{ .Values.service.ports.zmqpubrawblock }}
          volumeMounts:
            - name: data
              mountPath: /data/.bitcoin
            - name: config
              mountPath: /data/.bitcoin/bitcoin.conf
              subPath: bitcoin.conf
          livenessProbe:
            exec:
              command:
              - bitcoin-cli
              - -conf=/data/.bitcoin/bitcoin.conf
              {{- if ne .Values.global.network "mainnet" }}
              - -{{.Values.global.network}}  
              {{- end }}
              - getblockchaininfo
            initialDelaySeconds: 120
            periodSeconds: 30
          readinessProbe:
            exec:
              command:
              - bitcoin-cli
              - -conf=/data/.bitcoin/bitcoin.conf
              {{- if ne .Values.global.network "mainnet" }}
              - -{{.Values.global.network}}  
              {{- end }}
              - getblockchaininfo
            periodSeconds: 4
            successThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: exporter
          image: jvstein/bitcoin-prometheus-exporter:v0.5.0
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: BITCOIN_RPC_HOST
            value: 127.0.0.1
          - name: BITCOIN_RPC_USER
            value: rpcuser
          - name: BITCOIN_RPC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ printf "%s-rpcpassword" (include "bitcoind.fullname" .) }}
                key: password
          - name: METRICS_PORT
            value: {{ .Values.service.ports.metrics | quote }}
          - name: BITCOIN_RPC_PORT
            value: {{ .Values.global.service.ports.rpc | quote }}
          ports:
          - name: metrics
            containerPort: {{ .Values.service.ports.metrics }}
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: metrics
          readinessProbe:
            httpGet:
              path: /
              port: metrics
      volumes:
        - name: config
          emptyDir: {}
        - name: rpcpassword
          secret:
            secretName: {{ printf "%s-rpcpassword" (include "bitcoind.fullname" .) }}
        - name: configmap
          configMap:
            name: {{ template "bitcoind.fullname" . }}
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "bitcoind.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end -}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
